import { renderBlockToLiquid, renderEmailToLiquid } from '@/utils/liquidProcessor';
import { Block, BlockTemplate } from '@/types';

// Mock templates for testing
const mockTemplates: BlockTemplate[] = [
  {
    type: 'text',
    name: 'Text',
    template: '<div style="color: {{ color }};">{{ content }}</div>',
    defaultProps: { content: 'Test text', color: '#333' }
  }
];

describe('liquidRenderer', () => {
  test('renderBlockToLiquid should render text block correctly', () => {
    const block: Block = {
      id: 'test-1',
      type: 'text',
      props: { content: 'Hello World', color: '#ff0000' }
    };

    const result = renderBlockToLiquid(block, mockTemplates);    
    expect(result).toContain("{% assign content = 'Hello World' %}");
    expect(result).toContain("{% assign color = '#ff0000' %}");
    expect(result).toContain('<div style="color: {{ color }};">{{ content }}</div>');
  });

  test('renderEmailToLiquid should handle multiple blocks', () => {
    const blocks: Block[] = [
      {
        id: 'test-1',
        type: 'text',
        props: { content: 'First block', color: '#333' }
      },
      {
        id: 'test-2',
        type: 'text',
        props: { content: 'Second block', color: '#666' }
      }
    ];

    const result = renderEmailToLiquid(blocks, mockTemplates);
    expect(result).toContain('Generated by Braze Email Builder');
    expect(result).toContain('First block');
    expect(result).toContain('Second block');
  });
});